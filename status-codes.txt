
--------------------- Коды состояния HTTP ---------------------

Код состояния HTTP - часть первой строки ответа сервера, которая информирует клиента о результате запроса. Состоит он из трех цифр, первая из которых указывает на класс состояния. За цифрами идет фраза, которая объясняет причину ответа.
Существует 5 категорий серверных ответов. Класс состояния можно определить по первой цифре.
1** (сотые) — информационные сообщения, передача данных (не ошибка).
2** (двухсотые) — успешный запрос (не ошибка).
3** (трёхсотые) — перенаправления на другой адрес (не ошибка).
4** (четырёхсотые) — клиентские ошибки.
5** (пятисотые) — серверные ошибки. Причина технической ошибки со стороны сервера указывается в коротком текстовом описании после кода. Например, ошибка 500 — это внутренние сбои, реже — высокая нагрузка на сервер.

Всего статусов в спецификации HTTP 1.1 — 40. Вот самые популярные из них:

- 200 OK — данные успешно получены;
- 201 Created — значит, что запрос успешный, а данные созданы. Его используют, чтобы подтверждать успех запросов PUT или POST;
- 301 Moved Permanently — указывает, что запрашиваемый ресурс теперь доступен по новому URL-адресу и при последующих запросах стоит использовать именно его.
- 400 Bad Request — означает неверно сформированный запрос. Клиент отправляет запрос с неполными данными, плохо построенными данными или недопустимыми данными. 
Обычно это случается в связке с запросами POST и PUT, когда данные не прошли проверку или представлены в неправильном формате.
- 401 Unauthorized — нужно выполнить аутентификацию перед тем, как запрашивать доступ к ресурсу;
- 404 Not Found — значит, что не удалось найти запрашиваемый ресурс;
- 403 Forbidden - запрет доступа к запрашиваемой странице. Он связан с тем, что у пользователя нет прав. 
- 405 Method Not Allowed — говорит, что указанный метод HTTP не поддерживается для запрашиваемого ресурса;
- 409 Conflict — произошёл конфликт. Например, когда клиент хочет создать дважды данные с помощью запроса PUT;
- 500 Internal Server Error — означает ошибку со стороны сервера.


Ниже приведено более подробное описание серверных статус-кодов:

------------- 1xx - информационные коды -------------
-> 100	Continue (Продолжай)
Сервер удовлетворён начальными сведениями о запросе, и клиент может продолжать.

-> 101	Switching Protocols	(Переключение протоколов)
Клиент, пославший запрос, предлагает перейти на более подходящий для указанного ресурса протокол.

-> 102 Processing (Обработка)
Поскольку запрос WebDAV (протокол передачи), кроме основного запроса может включать и ряд других подзапросов, подразумевая также и файловые операции, то для его выполнения может потребоваться больше времени.

-> 103	Checkpoint	(Контрольная точка)
Используется в запросах с возможностью продолжения для возобновления после прерывания запросов POST или PUT.


------------- 2xx - Success (Успех) -------------
-> 200	OK
OK — успешный запрос. HTTP запрос успешно обработан.

-> 201	Created (Создано)
В результате успешного выполнения запроса был создан новый ресурс. 
Этот код обычно присылается в ответ на запрос PUT.

-> 202	Accepted (Принято)
Запрос был принят в обработку, но обработка еще не завершена.

-> 203 Non-Authoritative Information (Недостоверная/неавторитетная информация)
Запрос был успешно обработан (аналогично ответу 200), но в этом случае передаваемая информация была взята не из первичного источника (например, из резервной копии или другого сервера) и может быть неактуальной.

-> 204 No Content ("Нет содержимого")
Запрос был успешно обработан, но не вернул какой-либо контент. 
Нет содержимого для ответа на запрос, но заголовки ответа, которые могут быть полезны, присылаются. Клиент может использовать их для обновления кешированных заголовков полученных ранее для этого ресурса.

-> 205 Reset Content ("Сбросить содержимое")
Запрос был обработан, но не вернул контент. При этом требуется сброс введенных данных клиентом.
Этот код присылается, когда запрос обработан, чтобы сообщить клиенту, что необходимо сбросить отображение документа, который прислал этот запрос.
Аутентификация при помощи форм может быть успешной или неудачной. При неудачном выполнении обычно повторно отображается форма с очищенными полями.
И как раз для этого предназначен код состояния 205:
"HTTP-код состояния 205 Reset Content сообщает клиенту, что нужно сбросить визуализацию документа, то есть, например, очистить содержимое формы, сбросить состояние canvas или обновить UI". -- [Веб-документация MDN]

-> 206	Partial Content ("Частичное содержимое")
Сервер возвращает только часть контента, которая соответствует заголовку, отправленному клиентом. 
В основном его используют расширенные инструменты кэширования. 
Такое бывает, когда пользователь хочет получить лишь небольшую часть контента страницы, а сервер в своем ответе предоставляет данные только для этой части страницы.

-> 207 Multi-Status (Мультистатус)
Сервер параллельно предоставляет результаты нескольких независимых операций, которые включаются в тело сообщения в виде XML-документа.


-------- 3xx: Redirection - Редирект (перенаправление) --------
Коды состояния HTTP 3xx указывают на перенаправление. Когда пользователь или поисковые системы сталкиваются с кодом состояния 3xx, они будут перенаправлены на URL, отличный от исходного. 
Если SEO важен для успеха вашего бизнеса, тогда вы должны узнать об этих кодах и о том, как их правильно использовать.

-> 300 Multiple Choices ("Множественный выбор")
Выбор из нескольких вариантов
Сервер передаёт с сообщением список из нескольких возможных вариантов перенаправления альтернатив (максимум 5 вариантов). Клиент может выбрать один из них.

-> 301 Moved Permanently ("Перемещён на постоянной основе")
Этот код ответа значит, что URL запрашиваемого ресурса был изменён. 
Возможно, новый URL будет предоставлен в ответе.

-> 302 Found ("Найдено")
Найдено/временно перемещено
Запрашиваемая страница была найдена / временно перенесена на другой URL.
Этот код ответа значит, что запрошенный ресурс временно изменён. Новые изменения в URI могут быть доступны в будущем. Таким образом, этот URI, должен быть использован клиентом в будущих запросах.

-> 303 See Other ("Смотрите другое")
Просмотр других ресурсов
Этот код ответа присылается, чтобы направлять клиента для получения запрашиваемого ресурса в другой URI с запросом GET.

-> 304 Not Modified ("Не модифицировано")
Используется для кеширования. Это код ответа значит, что запрошенный ресурс не был изменён. 
Таким образом, клиент может продолжать использовать кешированную версию ответа.

-> 305 Use Proxy ("Использовать прокси")
Это означает, что запрошенный ресурс должен быть доступен через прокси. 
Этот код ответа в основном не поддерживается из соображений безопасности.

-> 306 Switch Proxy ("Переключить прокси")
Изначально он означал, что «последующие запросы должны использовать указанный прокси», но в настоящее время не используется.

-> 307 Temporary Redirect ("Временное перенаправление")
Сервер отправил этот ответ, чтобы клиент получил запрошенный ресурс на другой URL-адрес с тем же методом, который использовал предыдущий запрос. 
Данный код имеет ту же семантику, что код ответа 302 Found, за исключением того, что агент пользователя не должен изменять используемый метод HTTP: 
если в первом запросе использовался POST, то во втором запросе также должен использоваться POST.



-------- 4xx: Client Error (Ошибка клиента) --------
Коды состояния 4xx являются ошибками клиента. Например: страница не найдена, или что-то не так с запросом. 
Что-то, что происходит на стороне клиента, является проблемой. Это может быть неправильный формат данных, 
несанкционированный доступ или ошибка в запросе.

-> 400 Bad Request ("Плохой запрос")
Запрос не может быть обработан, поскольку содержит синтаксическую ошибку.
Клиент отправляет запрос с неполными данными, плохо построенными данными или недопустимыми данными.
Ошибка возникает в случае, если браузер клиента отправляет некорректный запрос серверу. 
Это может быть синтаксическая ошибка. Например, в запросе отсутствовали символы завершения строки.

-> 401 Unauthorized ("Не авторизован")
Запрос обрабатывается, но доступ к запрашиваемому ресурсу не предоставляется, поскольку клиент не авторизован.
Он имеет отношение к запросу ресурса, который нуждается в авторизации. 
Код 401 информирует, что предварительную авторизацию отклонили, поскольку переданные пользовательские данные были неверные. Когда он отображается? 
В случаях, если пользователь делает запрос и использует при этом некорректные входные данные для авторизации (среди них, логин и пароль).

-> 402 Payment Required ("Необходима оплата")
Это нестандартный HTTP-статус. Он означает, что запрос не может быть выполнен, пока пользователь не произведет оплату. Код используется в платных пользовательских сервисах, а не в хостинговых провайдерах.
Этот код ответа зарезервирован для будущего использования. Первоначальная цель для создания этого кода была в использовании его для цифровых платёжных систем(на данный момент не используется).

-> 403 Forbidden ("Запрещено")
Запрет доступа к запрашиваемой странице. Он связан с тем, что у пользователя нет прав. 
Доступ может быть ограничен для определенных IP или в случае, если неавторизованный клиент пытается открыть файлы в системной папке. Этот код встречается, если сервер обнаружил вредоносные данные.
Пользователь пробует добиться доступа к веб-ресурсу, на который у него нет прав, а авторизация здесь никак не может помочь.
Этот код используется, когда сервер может понять запрос, но не разрешает выполнить его, поскольку у клиента имеются ограничения доступа к текущему разделу. 
Обычно такое наблюдается, если веб-ресурс не предназначен для открытого доступа.

-> 404 Not Found ("Не найден")
Искомый ресурс невозможно найти, но в будущем – когда он может появиться там – к нему можно получить доступ. 
Также здесь разрешаются все следующие обращения от клиента. 
Но в большом количестве таких случаев используется код редиректа класса 3xx, и пользователь перенаправляется на альтернативный ресурс или местоположение.
Когда демонстрируется этот код? Довольно часто, особенно если страницу удалили или переместили. 
Часто в таких случаях сервер в автоматическом режиме генерирует доступную страницу с ошибкой 404.
Это один из самых распространенных кодов ошибки HTTP клиента. 
Сервер дает ответ, что страница не найдена по данному URL. Например, страница перенесена на другой адрес. 
Не стоит путать код 404 с ошибкой «Сервер не найден». В данном случае клиент в состоянии общаться с сервером, но данных по его запросу нет.

-> 405 Method Not Allowed ("Метод не разрешён")
"Метод не разрешён". Сервер знает о запрашиваемом методе, но он был деактивирован и не может быть использован. 
Метод, посредством которого осуществляется запрос к ресурсу, является недоступным. 
Иными словами, появляется ошибка при попытке использовать функцию в формате GET, тогда как требуется ввод данных через метод POST (либо с помощью метода PUT с веб-документами только для чтения).
Сервер сообщает, что используемый метод не может применяться на данном ресурсе. Он предложит доступные методы в заголовке Allow.

-> 406 Not Acceptable ("Недопустимо" / Не принимается)
Запрашиваемый ресурс имеет возможность генерировать только тот контент, который не может использоваться в Accept-хедерах самого запроса. 
Браузер может обеспечить сервер характеристиками данных, которые будут приниматься из сервера.
В каких случаях такой код может быть использован? В ситуациях, когда форма файла ресурса, который запрашивается не подходит под формат, доступный для распознавания пользователем. 
Речь здесь идет прежде всего о языке программирования, а не о английском!
Этот код ошибки указывает, что запрашиваемый контент не может быть распознан из-за кодировки, метода сжатия и других причин.

-> 407 Proxy Authentication Required ("Недопустимо" / Не принимается)
Этот код ответа аналогичен коду 401 за исключением того, что аутентификация требуется для прокси-сервера.

-> 408	Request Timeout ("Тайм-аут запроса" / Время ожидания истекло)
Запрос клиента к серверу занял слишком много времени.
«Истекло время ожидания ответа на запрос». Сервер не получил запрос полностью в течение максимально допустимого для этого времени. Такой код может возникнуть при передаче данных большого объёма методом PUT или POST.

-> 409 Conflict ("Конфликт")
Запрос не может быть обработан по причине конфликта с другим запросом или конфигурацией сервера.
Сервер не смог обработать запрос из-за того что содержимое этого запроса вступило в конфликт с параметрами сервера. Такое может случиться, если два клиента одновременно пытаются изменить ресурс при помощи метода PUT.

-> 410 Gone ("Исчез" / Удалено)
Запрос не может быть обработан, потому что ресурс был удалён. Новое расположение ресурса при этом неизвестно.
Доступный по указанному URL раньше был доступен, но был удалён или недоступен.

-> 411 Length Required ("Требуется значение заголовка Content-Length")
Сервер отказывается обрабатывать запрос, пока в его заголовках не будет указано значение в поле Content-Length.
Длина контента не определена, и сервер не принимает запрос без этого. Повторный запрос должен содержать заголовок "Content-Length".

-> 412 Precondition Failed ("Невыполнимые условия запроса")
Клиент указал в своих заголовках условия, которые сервер не может выполнить.
Сервер не может обработать запрос, потому что в его заголовках указано условие, которое не может быть выполнено.

-> 413 Request Entity Too Large ("Слишком большой запрос" / "Слишком большое тело запроса")
Тело запроса превышает максимально допустимый размер, который сервер может принять.
Код 413 отображается в случаях, когда сервер отказывается обрабатывать запрос, потому что тело запроса слишком велико.
Когда этот код может применяться? При использовании метода POST с контентом, который больше по объему, чем сервер, способен обработать.

-> 414	Request-URI Too Long ("Слишком длинный URI")
URI превышает максимально допустимую длину. Такое может случиться, если выбран неправильный метод (GET вместо POST).
У веб-сервера есть ограничение длины для интерпретации, а запрашиваемый URL длиннее установленных рамок. Чтобы избежать возникновения этого кода ошибки HTTP запросов, следует использовать метод GET, а не POST.

-> 415 Unsupported Media-Type ("Неподдерживаемый медиа формат данных")
Сервер отказывается обработать запрос, потому что его содержимое содержит данные в недопустимом для такого метода формате.
Когда отображается такой код? Когда в запросе не указываются какие-либо типы носителей, поддерживаемые ресурсом или сервером. 
Например, пользователь запрашивает изображение в расширении, которое не поддерживается веб-сервером. 
Сервер знает, что запрашивалось, но не понимает формат, в котором хотели получить ресурс.

-> 416 Requested Range Not Satisfiable ("Диапазон не может быть выполнен")
В поле Range указан недопустимый для ресурса диапазон.
Этот ответ пользователь получает, когда он запрашивает часть ресурса, но в то же время этот фрагмент не может быть предоставлен.
Когда такой статус может применяться? Когда сервер запрашивает байты XXX-YYY ресурса, но ресурс немного меньше, чем указано при обращении

-> 417 Expectation Failed ("Недопустимое значение поля Expect" Ошибка ожидания)
Сервер не может выполнить условие в поле Expect в заголовках запроса.

-> 418 I’m a teapot ("Я чайник")
Сообщение, которое должен отправлять чайник для заварки чая, если на нём пытаются заварить кофе. 
Этот код ошибки был введён в качестве первоапрельской шутки в 1998 году.
Этот код был создан в 1998 году как одна из традиционных шуток на первое апреля IETF, в RFC 2324, 
как Hyper Text Coffee Pot Control Protocol и вряд ли он когда-нибудь будет обрабатываться современными HTTP-серверами.

-> 422 Unprocessable Entity ("Необрабатываемый запрос"). 
Синтаксис запроса правильный, но из-за логической ошибки сервер не может его выполнить. Такой код ошибки может возникнуть, если запрос содержит XML-документ с логической ошибкой.

-> 423 Locked ("Заблокировано"). 
Запрашиваемый ресурс заблокирован для запросов с таким методом.
Страница, которую запрашивает пользователь, заблокирована от применения указанного метода. Возможен следующий вариант решения проблемы: перезагрузка роутера и компьютера и использование статистического IP.

-> 424 Failed Dependency ("Невыполненная зависимость"). 
Сервер не смог выполнить запрос, потому что запрашиваемое в нём действие зависело от другого действия, и оно не сработало.
Выполнение текущего запроса напрямую зависит от успешности другой операции, и если она не будет правильно завершена, то вся обработка запроса остановится.

-> 426 Upgrade Required — ("Необходимо обновить протокол"). 
Сервер отказывается обрабатывать запрос, используя текущий протокол, но может сделать это после перехода на его другую версию. 
Сервер ОБЯЗАН указать в заголовках ответа требуемую версию протокола в поле Upgrade.

-> 429 Too Many Requests ("Слишком много запросов")
Этот код ошибок HTTP возникает, когда превышен лимит отправляемых пользователем запросов за короткий промежуток времени. Это делается, прежде всего, из соображений безопасности.


-------- 5xx: Server Error (Ошибки сервера) --------
Коды 5xx выделены для случаев неудачной работы на стороне сервера.
Эти ответы сервера часто отображаются, когда запросы пользователя не могут быть обработаны сервером по той или иной причине. Сервер должен иметь специальное сообщение для браузера, которое должно отображаться пользователю – оно уведомляет, что сервер (по какому-либо поводу) не в состоянии произвести обработку запроса.

-> 500 Internal Server Error ("Внутренняя ошибка сервера")
Сервер столкнулся с непредвиденной ошибкой во время обработки запроса.
Ошибка 500 говорит о том, что сервер не может обработать запрос к сайту, на странице которого вы находитесь. 
При этом браузер не может точно сообщить, что именно пошло не так.


-> 501 Not Implemented ("Не поддерживается")
Сервер либо не понимает метод запроса, либо не поддерживает инструкции, нужные, чтобы обработать обращение.
Вы можете столкнуться с указанным кодом 501, когда сервер не имеет поддержки стандартных протоколов запросов, среди которых GET, OPTIONS, HEAD, POST и т.д.
Ошибка 501 сообщает, что метод запроса сервером не поддерживается и его невозможно корректно обработать.
В ряде случаев в теле ошибки может быть указано: «Отправьте запрос позднее. Возможно, необходимая функция будет доступна».


-> 502 Bad Gateway ("Плохой шлюз" / Ошибка шлюза)
Пользователь увидит 502 код, если сервер, работает в качестве шлюза или прокси-сервера, и он получил недопустимый ответ от сервера верхнего уровня.
Когда используется подобный код? Обычно, когда сервер высшего уровня и прокси / шлюз не согласованы с протоколами, представленными в обращении. Как результат появляется ошибка обмена данных.
Такая ошибка отправляется в случае недействительного ответа от вышестоящего сервера. Основная причина — несогласованные протоколы сервера и посредника.


-> 503 Service Unavailable ("Сервис недоступен")
Сервер не доступен в данный момент (перегружен, отключен, на техническом обслуживании).
Код 503 означает, что возникли технические причины, из-за которых сервер на определенное время не способен обработать набор данных.
Его допустимо использовать в случаях, когда на сайт есть повышенный спрос, но у сервера нет возможности обрабатывать все входящие запросы.


-> 504 Gateway Timeout ("Шлюз не отвечает" / Тайм-аут шлюза)
Это код ошибки HTTP сервера является аналогом статуса 408. 
Сервер действует как шлюз и не получил ответ от вышестоящего сервера в обозначенное в настройках время.


-> 505 HTTP Version Not Supported ("Версия HTTP не поддерживается")
Сервер не поддерживает версию HTTP, которая указана в заголовках запроса.
Этот код аналогичен 426. Он сообщает, что сервер не поддерживает версию протокола HTTP, который используется клиентом. Это случается, если используется устаревший формат HTTP-протокола. Решением проблемы будет установка одной версии.


-> 507 Insufficient Storage — ("Недостаточно места"). 
Сервер не может выполнить запрос, потому что на нём недостаточно свободного места, чтобы сохранить необходимые для выполнения запроса данные.
Ошибка 507 имеет место, когда сервер не может разместить данные, поскольку для текущего запроса недостаточно пространства.
Этот код может быть применен, когда сервер загружен в полном объеме, а пользователь запрашивает ресурс, который уже имеется в наличии. 
Трудность здесь заключается в том, что на сервере нет места для хранения отправленных в запросе данных, чтобы отправить запрашиваемый ресурс.


-> 510 Not Extended ("Нет расширения")
У сервера отсутствует расширение, которое пользователь запрашивает. 
Список доступных расширений прописывается в теле ошибки.


-> 511 Network Authentication Required ("Требуется аутентификация сети")
Для получения доступа к сети, клиент должен пройти аутентификацию. 
Ошибка генерируется сервером-посредником, к примеру, сервером интернет-провайдера, если нужно ввести пароль для получения доступа к сети через платную точку доступа.
Этот статус-код демонстрируется, если клиенту следует сначала авторизоваться в сети, к примеру, необходимо ввести пароль для платного доступа в сеть Интернет.







