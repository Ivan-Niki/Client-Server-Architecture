
---------- ОСОБЕННОСТИ SOAP и REST и ИХ ОТЛИЧИЯ ----------

REST и SOAP – это протоколы, которые используются для взаимодействия между различными системами в сети интернет.
Они имеют свои особенности и отличия, которые могут иметь важное значение при выборе протокола для конкретной задачи.

REST (Representational State Transfer) – это архитектурный стиль, который использует протоколы HTTP и URL для обмена данными между клиентом и сервером. 
REST является более легковесным и гибким, чем SOAP, и часто используется в веб-приложениях и при работе с мобильными приложениями. 
REST использует стандартные HTTP методы, такие как GET, POST, PUT и DELETE, для выполнения операций с данными на сервере.
Одна из главных особенностей REST – это то, что он не хранит состояние между запросами. 
Вместо этого, клиент отправляет запрос на сервер, получает ответ и закрывает соединение. 
Это позволяет организовывать работу с сервером более эффективно, так как каждый запрос изолирован от предыдущего и следующего.

SOAP (Simple Object Access Protocol) – это протокол, который использует XML для структурирования запросов и ответов между клиентом и сервером. 
SOAP часто используется в крупных предприятиях, где требуется более сложный уровень безопасности и надежности. SOAP не использует стандартные методы HTTP, вместо этого он использует свой собственный набор протоколов.
SOAP имеет более строгий формат запроса и ответа, который требует большего количества кодирования. 
SOAP также может быть более медленным, чем REST, так как больше данных передается в формате XML, что занимает больше места и требует большего времени на обработку.

Специфика SOAP — это формат обмена данными. С SOAP это всегда SOAP-XML, который представляет собой XML, включающий:
— Envelope (конверт) – корневой элемент, который определяет сообщение и пространство имен, использованное в документе,
— Header (заголовок) – содержит атрибуты сообщения, например: информация о безопасности или о сетевой маршрутизации,
— Body (тело) – содержит сообщение, которым обмениваются приложения,
— Fault – необязательный элемент, который предоставляет информацию об ошибках, которые произошли при обработке сообщений. И запрос, и ответ должны соответствовать структуре SOAP.

Специфика REST — использование HTTP в качестве транспортного протокола. Он подразумевает наилучшее использование функций, предоставляемых HTTP — методы запросов, заголовки запросов, ответы, заголовки ответов и т.д.



============ ОСНОВНЫЕ ОТЛИЧИЯ REST и SOAP ============

----- Формат обмена сообщениями -----
1) В SOAP вы используете формат SOAP XML для запросов и ответов.

2) В REST такого фиксированного формата нет. 
В архитектурном стиле REST нет ограничений XML в качестве формата сообщения. 
API REST могут использовать любой формат сообщений, который хотят использовать разработчики API, включая XML, JSON, TXT, RSS, CSV, HTML и другие.
JSON является самым популярным среди используемых форматов. Несмотря на разнообразие параметров формата сообщений, большинство API REST используют JSON в качестве формата сообщений по умолчанию. 
Они используют JSON, потому что он обеспечивает легкий, простой и более гибкий формат сообщений, который увеличивает скорость связи. 
Облегченная природа JSON также позволяет выполнять сценарии мобильной разработки, он легок для парсинга в Интернете с помощью JavaScript.


------- Сервисные определения -------
1) Протокол SOAP применяет WSDL (Web Services Description Language) — это основанный на XML язык, который служит для описания web-сервисов и доступа к ним.
SOAP - это стандартизированный протокол, который требует XML в качестве формата сообщений для запросов и ответов. 
Как стандартный протокол, формат сообщения обычно определяется с помощью файла WSDL (язык описания веб-служб).
Файл WSDL определяет разрешенные элементы и атрибуты в обмениваемых сообщениях. 
Файл WSDL является машиночитаемым и используется серверами, взаимодействующими друг с другом для облегчения связи.
Сообщения SOAP заключены в «конверт», который включает в себя заголовок и тело, используя определенную схему XML и пространство имен.

2) А вот REST стандартного языка определения сервиса не имеет. 
Одним из первых предложенных стандартов был WADL, но он не очень-то популярен. 
На практике широко используются Swagger либо Open API.


------- Транспортный протокол -------
1) В SOAP нет ограничений на тип используемого транспортного протокола, то есть существует возможность применять тот же HTTP, SMTP или, например, MQ.

2) Что касается REST, то обычно этот стиль связывают с эффективным использованием транспортного протокола HTTP. Однако специалисты утверждают, что никто не мешает реализовать REST-архитектуру и с применением других протоколов.


------- Простота реализации -------
1) В настоящее время считается, что RESTFful веб-сервисы реализовать проще. 
Во-первых, в REST часто используют JSON, а его легче обрабатывать и анализировать. 
Во-вторых, REST не требует наличия сервисных определений (Service Definitions) для предоставления web-службы. 

2) В случае с SOAP ситуация несколько сложнее: 
во-первых, надо определить свой сервис с применением WSDL;
во-вторых, возникают существенные накладные расходы в процессе обработки/анализа сообщений SOAP-XML.


------- Безопасность -------
1) REST не определяет стандарты безопасности и надежности. Но может использовать дополнительные стандарты, если необходимо. 
REST использует HTTPS для обеспечения безопасности. Также может использовать токены авторизации, как OAuth.
API REST поддерживают только традиционные механизмы веб-безопасности, такие как HTTPS. 
Это означает, что когда приложение отправляет и получает сообщение от REST API, используя HTTPS, сообщение защищено только для HTTPS-соединения. 
То есть, сообщение защищено только во время передачи между клиентом и службой. 
Это хорошо для публичных веб-служб, но может быть недостаточно для передачи более чувствительных данных.

2) SOAP поддерживает стандарты WS-Security, WS-ReliableMessaging, WS-AtomicTransaction, WS-Addressing, WS-Coordination и другие.
Поскольку SOAP является протоколом обмена сообщениями, защита SOAP API в первую очередь направлена на предотвращение 
несанкционированного доступа к сообщениям (и информации пользователей, содержащейся в этих сообщениях), получаемым и отправляемым из SOAP API. 
Основным средством защиты от несанкционированного доступа являются Web Standards (WS) Security - 
набор принципов, регулирующих процедуры конфиденциальности и аутентификации для обмена сообщениями SOAP. 
Меры, соответствующие WS Security, включают пароли, шифрование XML и маркеры безопасности, среди прочих механизмов. 
WS Security выходит за рамки традиционных механизмов веб-безопасности, таких как HTTPS, которые обеспечивают безопасность сообщений только во время 
транспортировки между клиентом, сделавшим запрос, и сервером или веб-службой, имеющей запрашиваемые данные. 
WS Security, с другой стороны, обеспечивает безопасность сообщений за пределами соединения HTTPS, а иногда даже за пределами транспортного уровня.


------- Скорость -------
1) REST обычно быстрее, чем SOAP, так как он использует стандартный набор протоколов HTTP.

2) SOAP медленнее, так как он требует больше обработки для работы с данными.
Основная проблема с SOAP заключается в том, что формат сообщений XML слишком многословный и тяжелый. 
Особенно это проблематично в мобильных сценариях, где размер файла и пропускная способность играют решающее значение. 
Многословный формат сообщения замедляет время обработки, что делает взаимодействия SOAP вялым.


------- Кэширование -------
1) REST поддерживает хорошее кэширование на уровне HTTP.

2) SOAP обычно имеет ограниченную поддержку кэширования.


------- Состояние (Stateful / Stateless) -------
1) REST не хранит состояние между запросами. RESTful API обычно stateless.

2) SOAP может хранить состояние, что может замедлить работу. Может быть как stateful, так и stateless.

