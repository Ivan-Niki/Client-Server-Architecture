
------------- Что такое TCP/IP --------------
Модель TCP/IP — это стек протоколов, которые задают правила передачи данных по Сети. 
Так как бал здесь правят протоколы TCP и IP, в честь них и назвали всю модель.
TCP (Transmission Control Protocol) отвечает за обмен данными. Он управляет их отправкой и следит за тем, чтобы они дошли до получателя в целости. 
У TCP есть свои гарантии, что всё пройдёт успешно, — о них чуть позже.
IP (Internet Protocol) отвечает за адресацию. Его задача — связывать друг с другом устройства и нарезать данные на пакеты для удобной отправки. 
Чтобы протокол мог быстро найти дорогу от одного компьютера к другому, придумали IP-адреса — уникальные идентификаторы, которые есть у каждого устройства в Сети.
Эти два протокола работают в связке: IP строит маршрут, а TCP контролирует, чтобы всё передавалось правильно.

Стек протоколов TCP/IP (Transmission Control Protocol/Internet Protocol, протокол управления передачей/протокол интернета) — сетевая модель, описывающая процесс передачи цифровых данных. 
Она названа по двум главным протоколам, по этой модели построена глобальная сеть интернет. 
Сейчас это кажется невероятным, но в 1970-х информация не могла быть передана из одной сети в другую. 
Чтобы обеспечить такую возможность, был разработан стек интернет-протоколов, известный как TCP/IP.
Разработка сетевой модели осуществлялась при содействии Министерства обороны США, поэтому иногда модель TCP/IP называют DoD (Department of Defence) модель. 
Если вы знакомы с моделью OSI, то вам будет проще понять построение модели TCP/IP, потому что обе модели имеют деление на уровни, внутри которых действуют определенные протоколы и выполняются собственные функции.


--------- Из каких уровней состоит TCP/IP ----------
Глобально модель TCP/IP делится на четыре уровня:
-> канальный уровень — отвечает за взаимодействие по сетевому оборудованию, например по Ethernet-кабелю или Wi-Fi;
-> межсетевой уровень — помогает отдельным сетям общаться друг с другом;
-> транспортный уровень — отвечает за передачу данных между устройствами, например, по протоколам TCP и UDP;
-> прикладной уровень — помогает приложениям общаться друг с другом с помощью интерфейсов или API.

На каждом уровне есть свои протоколы, которые обеспечивают надёжность передачи данных между компьютерами в Сети.
Всего модель TCP/IP поддерживает сотни разных протоколов.



----------- Канальный уровень/Уровень сетевых интерфейсов (Network Interface layer) ------------

Самый нижний, уровень сетевых интерфейсов, обеспечивает взаимодействие с сетевыми технологиями (Ethernet, Wi-Fi и т.д.). 
Это объединение функций канального и физического уровней OSI.
Для чего нужен: устанавливать физическое соединение между устройствами в локальной сети с помощью радиоволн и проводов.
Примеры протоколов: Ethernet, Wi-Fi, Bluetooth.
Как работает: данные делятся на небольшие кусочки (фреймы) и передаются между устройствами. Каждый фрейм содержит часть передаваемой информации и служебные данные.
Чтобы понять, куда отправлять фреймы, используют адресацию канального уровня — MAC-адреса. 
Это уникальные физические адреса устройств — по ним протоколы канального уровня определяют отправителей и получателей.
___________________________________
 MAC-адрес  |  MAC-адрес | Данные  |  <------ Фрейм
оптравителя | получателя |         |
-----------------------------------

Ещё одна важная задача канального уровня — проверять, что данные передаются безошибочно. Для этого протоколы используют свои средства проверки:
- Если возникла ошибка, устройство отправляет фрейм обратно, а второе устройство передаёт его ещё раз.
- Если всё прошло удачно, то фрейм передаётся на следующий уровень для обработки.



-------------- Межсетевой (сетевой) уровень (Internet layer) --------------

Глобальная сеть интернет состоит из множества локальных сетей, взаимодействующих между собой. Межсетевой уровень используется, чтобы описать обеспечение такого взаимодействия.
Межсетевое взаимодействие — это основной принцип построения интернета. Локальные сети по всему миру объединены в глобальную, а передачу данных между этими сетями осуществляют магистральные и пограничные маршрутизаторы.
Именно на межсетевом уровне функционирует протокол IP, позволивший объединить разные сети в глобальную. 
Как и протокол TCP, он дал название модели, рассматриваемой в статье.

Для чего нужен: строить маршруты между устройствами по всему интернету — этот процесс называется маршрутизацией.
Примеры протоколов: IP, ICMP, ARP, DHCP*.
* - иногда его относят к прикладному уровню).
- DHCP (Dynamic Host Configuration Protocol) - служит для назначения IP-адреса клиенту.

Как работает: IP-протокол вычисляет местонахождение устройств по их IP-адресам, а также строит до них кратчайшие пути и делит данные на пакеты.
Чтобы определить, где находится получатель и как построить путь к нему, IP обращается к системе DNS — она знает IP-адреса всех устройств в интернете.

Когда адрес получен, передаваемый файл разбивается на небольшие части — пакеты. Они содержат фрагменты данных и служебную информацию, например IP-адреса отправителя и получателя.
___________________________________
 IP-адрес   |  IP-адрес  | Данные  |  <------ Пакет
оптравителя | получателя |         |
-----------------------------------

После этого начинается передача пакетов по маршрутизаторам и коммутаторам. Но процессом отправки занимается уже следующий уровень — транспортный.

Межсетевой (иногда называют "сетевой") уровень отвечает за объединение локальных сетей в глобальную. 
И сетевой уровень также отвечает за адресацию хостов, упаковку и функции маршрутизации. 
Основными протоколами сетевого уровня являются IP, протокол разрешения адресов (ARP), протокол управляющих сообщений Интернета (ICMP) и протокол управления группами Интернета (IGMP). 
IP - это маршрутизируемый протокол, отвечающий за IP-адресацию, маршрутизацию и фрагментацию и повторную сборку пакетов. 
ARP отвечает за обнаружение адреса уровня сетевого доступа, такого как адрес аппаратных средств, связанный с данным доступом к Интернет-уровню. 
ICMP отвечает за предоставление диагностических функций и отчетов об ошибках из-за неудачной доставки IP-пакетов. 
IGMP отвечает за управление многоадресными группами IP. На этом уровне IP добавляет заголовок к пакетам, который известен как IP-адрес. 
Сейчас есть IPv4 (32-битный) адрес и IPv6 (128-битный) адрес.



------------- Транспортный уровень (Transport Layer) -------------

Для чего нужен: передавать данные по маршруту, построенному на предыдущем уровне.
Примеры протоколов: TCP, UDP.
Как работает: устанавливает надёжное соединение между устройствами, а затем следит за передачей данных по нему и исправляет ошибки.
Главных протокола здесь два:
-> TCP (Transmission Control Protocol) — гарантирует передачу всех данных без потерь. Полезен при отправке текстовых файлов.
-> UDP (User Datagram Protocol) — не гарантирует передачу данных без потерь, но обеспечивает хорошую скорость. Полезен при просмотре видео или прослушивании музыки в интернете.

TCP (протокол управления передачей) — надежный, он обеспечивает передачу информации, проверяя дошла ли она, насколько полным является объем полученной информации и т.д. 
TCP дает возможность двум конечным устройствам производить обмен пакетами через предварительно установленное соединение. 
Он предоставляет услугу для приложений, повторно запрашивает потерянную информацию, устраняет дублирующие пакеты, регулируя загруженность сети. 
TCP гарантирует получение и сборку информации у адресата в правильном порядке.

UDP (протокол пользовательских датаграмм) — ненадежный, он занимается передачей автономных датаграмм. 
UDP не гарантирует, что всех датаграммы дойдут до получателя. 
Датаграммы уже содержат всю необходимую информацию, чтобы дойти до получателя, но они все равно могут быть потеряны или доставлены в порядке отличном от порядка при отправлении.
UDP обычно не используется, если требуется надежная передача информации. 
Использовать UDP имеет смысл там, где потеря части информации не будет критичной для приложения, например, в видеоиграх или потоковой передаче видео. 
UDP необходим, когда делать повторный запрос сложно или неоправданно по каким-то причинам.



------------- Прикладной уровень (Application Layer) -------------

Здесь объединены 3 уровня модели OSI – сеансовый, представления и прикладной. 
На него ложатся задачи по поддержанию сеанса связи, преобразованию данных, взаимодействию с пользователем и сетью. 
На этом уровне применяются стандарты интерфейса API, позволяющего передавать команды на выполнение определенных задач.
Возможно и использование «производных» протоколов. Например, для открытия сайтов используется HTTPS, при отправке электронной почты – SMTP, для назначения IP-адресов – DHCP*. 
Такой подход упрощает программирование, снижает нагрузку на сеть, увеличивает скорость обработки команд и передачи данных.

Для чего нужен: настраивать связи между приложениями — например, между браузером и серверным софтом.
Примеры протоколов: HTTP, FTP, SMTP.
Как работает: использует различные протоколы и сервисы, которые помогают приложениям обмениваться данными по интернету.
На прикладном уровне хранятся протоколы для всего, что нужно человеку: отправки имейлов, веб-браузинга, передачи файлов и удалённого доступа. 
Вот некоторые из них:
- HTTP (HyperText Transfer Protocol) — самый популярный протокол для передачи данных по интернету.
- FTP (File Transfer Protocol) — ещё один известный протокол, заточенный под передачу файлов.
- SMTP (Simple Mail Transfer Protocol) — протокол для отправки электронных писем.
- DNS (Domain Name System) - назначение IP-адресам понятных доменных имен.

Этот уровень нужен, чтобы упростить пользователям передачу данных по интернету. Именно с его помощью программисты и обычные пользователи взаимодействуют с моделью TCP/IP.


